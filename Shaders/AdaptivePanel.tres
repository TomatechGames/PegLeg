[gd_resource type="VisualShader" load_steps=43 format=3 uid="uid://dwr30ie6yoste"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_pl0p0"]
default_input_values = [0, 1.0, 1, 0.0]
operator = 1

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_be1ep"]
default_input_values = [0, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ms4c0"]
operator = 7

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ogrjb"]
default_input_values = [0, 0.0, 1, 0.5]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_u2ce6"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
expanded_output_ports = [0]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ythjp"]
operator = 2

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_2rh7v"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_kwbs0"]
parameter_name = "CornerRadius"
default_value_enabled = true
default_value = 10.0

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_wh857"]

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_ufu2i"]
parameter_name = "UseCorners"
default_value_enabled = true
default_value = true

[sub_resource type="VisualShaderNodeGlobalExpression" id="VisualShaderNodeGlobalExpression_uyjc3"]
size = Vector2(1060, 460)
expression = "float cornerMask(vec2 controlPos, float cornerRadius, vec2 controlSize)
{
	vec2 shrunkSize = controlSize-vec2(cornerRadius,cornerRadius);
	
	float maskA = distance(controlPos, vec2(cornerRadius,cornerRadius))-(cornerRadius-1.0);
	float maskB = distance(controlPos, vec2(shrunkSize[0],cornerRadius))-(cornerRadius-1.0);
	float maskC = distance(controlPos, vec2(cornerRadius,shrunkSize[1]))-(cornerRadius-1.0);
	float maskD = distance(controlPos, shrunkSize)-(cornerRadius-1.0);
	float cornerOnlyMask = min(min(maskA,maskB),min(maskC,maskD));
	
	float maskE = min(1.0-(controlPos[1]+1.0-controlSize[1]), controlPos[1]) * ((controlPos[0]>cornerRadius && controlPos[0]<shrunkSize[0])?1.0:0.0);
	float maskF = min(1.0-(controlPos[0]+1.0-controlSize[0]), controlPos[0]) * ((controlPos[1]>cornerRadius && controlPos[1]<shrunkSize[1])?1.0:0.0);
	float edgeOnlyMask = min(1.0-maskE, 1.0-maskF);
	
	return min(cornerOnlyMask, edgeOnlyMask);
}"

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_ypa7l"]
size = Vector2(640, 240)
expression = "mask = cornerMask(controlPos,cornerRadius,controlSize);"

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_0jhqc"]
parameter_name = "shiftDirection"
default_value_enabled = true
default_value = Vector2(0.5, 0.5)

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_kovvx"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0), 2, Vector2(1, 1)]
op_type = 3

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_3j1xf"]

[sub_resource type="VisualShaderNodeVaryingGetter" id="VisualShaderNodeVaryingGetter_wrjpy"]
varying_name = "modulate"
varying_type = 5

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_pwxxm"]
input_name = "texture"

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_vgd3f"]

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_ecr4f"]
parameter_name = "Fit"

[sub_resource type="VisualShaderNodeParameterRef" id="VisualShaderNodeParameterRef_uwdm0"]
parameter_name = "ControlSize"
param_type = 4

[sub_resource type="VisualShaderNodeParameterRef" id="VisualShaderNodeParameterRef_2j8qi"]
parameter_name = "ControlSize"
param_type = 4

[sub_resource type="VisualShaderNodeParameterRef" id="VisualShaderNodeParameterRef_gy2x2"]
parameter_name = "ControlSize"
param_type = 4

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_7p2kb"]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_7gv74"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_u0tfc"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_vnepc"]
parameter_name = "ControlSize"
default_value_enabled = true
default_value = Vector2(100, 100)

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_i3xt6"]
input_name = "texture_pixel_size"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_rig8v"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(1, 1)]
op_type = 0
operator = 3

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_qhxbw"]
default_input_values = [0, Vector2(1, 1), 1, Vector2(0, 0)]
op_type = 0
operator = 3

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_0ot5f"]
operator = 3

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_8ocd3"]
default_input_values = [0, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_sa8ns"]
default_input_values = [0, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_h6d27"]
operator = 3

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_14s04"]
operator = 6

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_l4r27"]
operator = 7

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_32uc6"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 3

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_ans1g"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_d42h6"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0.5, 1)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_j3x57"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 1

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_4hvrv"]
operator = 7

[sub_resource type="VisualShaderNodeVaryingSetter" id="VisualShaderNodeVaryingSetter_ksf3k"]
varying_name = "modulate"
varying_type = 5

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_nv4md"]
input_name = "color"

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform vec2 ControlSize = vec2(100.000000, 100.000000);

// Varyings
varying vec4 var_modulate;

uniform bool Fit;
uniform vec2 shiftDirection = vec2(0.500000, 0.500000);
uniform bool UseCorners = true;
uniform float CornerRadius = 10;


// GlobalExpression:0
	float cornerMask(vec2 controlPos, float cornerRadius, vec2 controlSize)
	{
		vec2 shrunkSize = controlSize-vec2(cornerRadius,cornerRadius);
		
		float maskA = distance(controlPos, vec2(cornerRadius,cornerRadius))-(cornerRadius-1.0);
		float maskB = distance(controlPos, vec2(shrunkSize[0],cornerRadius))-(cornerRadius-1.0);
		float maskC = distance(controlPos, vec2(cornerRadius,shrunkSize[1]))-(cornerRadius-1.0);
		float maskD = distance(controlPos, shrunkSize)-(cornerRadius-1.0);
		float cornerOnlyMask = min(min(maskA,maskB),min(maskC,maskD));
		
		float maskE = min(1.0-(controlPos[1]+1.0-controlSize[1]), controlPos[1]) * ((controlPos[0]>cornerRadius && controlPos[0]<shrunkSize[0])?1.0:0.0);
		float maskF = min(1.0-(controlPos[0]+1.0-controlSize[0]), controlPos[0]) * ((controlPos[1]>cornerRadius && controlPos[1]<shrunkSize[1])?1.0:0.0);
		float edgeOnlyMask = min(1.0-maskE, 1.0-maskF);
		
		return min(cornerOnlyMask, edgeOnlyMask);
	}

void vertex() {
// Input:3
	vec4 n_out3p0 = COLOR;


// VaryingSetter:2
	var_modulate = n_out3p0;


}

void fragment() {
// VaryingGetter:135
	vec4 n_out135p0 = var_modulate;


// Input:15
	vec2 n_out15p0 = UV;


// ParameterRef:139
	vec2 n_out139p0 = ControlSize;


// VectorOp:18
	vec2 n_out18p0 = n_out15p0 * n_out139p0;


// ParameterRef:141
	vec2 n_out141p0 = ControlSize;


// Input:41
	vec2 n_out41p0 = TEXTURE_PIXEL_SIZE;


// VectorOp:45
	vec2 n_in45p0 = vec2(1.00000, 1.00000);
	vec2 n_out45p0 = n_in45p0 / n_out41p0;


// BooleanParameter:138
	bool n_out138p0 = Fit;


// VectorDecompose:48
	float n_out48p0 = n_out45p0.x;
	float n_out48p1 = n_out45p0.y;


// Vector2Parameter:4
	vec2 n_out4p0 = ControlSize;


// VectorDecompose:51
	float n_out51p0 = n_out4p0.x;
	float n_out51p1 = n_out4p0.y;


// FloatOp:47
	float n_out47p0 = n_out48p0 / n_out51p0;


// FloatOp:52
	float n_out52p0 = n_out48p1 / n_out51p1;


// FloatOp:53
	float n_out53p0 = max(n_out47p0, n_out52p0);


// FloatOp:54
	float n_out54p0 = min(n_out52p0, n_out47p0);


	float n_out137p0;
// Switch:137
	n_out137p0 = mix(n_out54p0, n_out53p0, float(n_out138p0));


// VectorOp:55
	vec2 n_out55p0 = n_out45p0 / vec2(n_out137p0);


// VectorOp:64
	vec2 n_out64p0 = n_out141p0 - n_out55p0;


// Vector2Parameter:130
	vec2 n_out130p0 = shiftDirection;


// Clamp:131
	vec2 n_in131p1 = vec2(0.00000, 0.00000);
	vec2 n_in131p2 = vec2(1.00000, 1.00000);
	vec2 n_out131p0 = clamp(n_out130p0, n_in131p1, n_in131p2);


// VectorOp:59
	vec2 n_out59p0 = n_out64p0 * n_out131p0;


// VectorOp:56
	vec2 n_out56p0 = n_out18p0 - n_out59p0;


// VectorOp:42
	vec2 n_out42p0 = n_out56p0 / n_out55p0;


	vec4 n_out35p0;
// Texture2D:35
	n_out35p0 = texture(TEXTURE, n_out42p0);


// VectorOp:118
	vec4 n_out118p0 = n_out135p0 * n_out35p0;
	float n_out118p4 = n_out118p0.a;


// BooleanParameter:126
	bool n_out126p0 = UseCorners;


// ParameterRef:140
	vec2 n_out140p0 = ControlSize;


// VectorDecompose:114
	float n_out114p0 = n_out4p0.x;
	float n_out114p1 = n_out4p0.y;


// FloatOp:115
	float n_out115p0 = min(n_out114p0, n_out114p1);


// FloatOp:116
	float n_in116p1 = 0.50000;
	float n_out116p0 = n_out115p0 * n_in116p1;


// FloatParameter:124
	float n_out124p0 = CornerRadius;


// FloatOp:87
	float n_out87p0 = min(n_out116p0, n_out124p0);


	float n_out129p0;
// Expression:129
	n_out129p0 = 0.0;
	{
		n_out129p0 = cornerMask(n_out18p0,n_out87p0,n_out140p0);
	}


// FloatOp:113
	float n_in113p0 = 1.00000;
	float n_out113p0 = n_in113p0 - n_out129p0;


// Clamp:123
	float n_in123p1 = 0.00000;
	float n_in123p2 = 1.00000;
	float n_out123p0 = clamp(n_out113p0, n_in123p1, n_in123p2);


// FloatOp:120
	float n_out120p0 = n_out118p4 * n_out123p0;


	float n_out125p0;
// Switch:125
	n_out125p0 = mix(n_out118p4, n_out120p0, float(n_out126p0));


// Output:0
	COLOR.rgb = vec3(n_out118p0.xyz);
	COLOR.a = n_out125p0;


}
"
mode = 1
flags/light_only = false
varyings/modulate = "0,5"
nodes/vertex/2/node = SubResource("VisualShaderNodeVaryingSetter_ksf3k")
nodes/vertex/2/position = Vector2(80, 220)
nodes/vertex/3/node = SubResource("VisualShaderNodeInput_nv4md")
nodes/vertex/3/position = Vector2(-280, 200)
nodes/vertex/connections = PackedInt32Array(3, 0, 2, 0)
nodes/fragment/0/position = Vector2(4440, 680)
nodes/fragment/4/node = SubResource("VisualShaderNodeVec2Parameter_vnepc")
nodes/fragment/4/position = Vector2(-1320, 1180)
nodes/fragment/15/node = SubResource("VisualShaderNodeInput_7p2kb")
nodes/fragment/15/position = Vector2(-240, 480)
nodes/fragment/18/node = SubResource("VisualShaderNodeVectorOp_7gv74")
nodes/fragment/18/position = Vector2(200, 480)
nodes/fragment/35/node = SubResource("VisualShaderNodeTexture_u0tfc")
nodes/fragment/35/position = Vector2(1800, 820)
nodes/fragment/41/node = SubResource("VisualShaderNodeInput_i3xt6")
nodes/fragment/41/position = Vector2(-1340, 880)
nodes/fragment/42/node = SubResource("VisualShaderNodeVectorOp_rig8v")
nodes/fragment/42/position = Vector2(1420, 800)
nodes/fragment/45/node = SubResource("VisualShaderNodeVectorOp_qhxbw")
nodes/fragment/45/position = Vector2(-1000, 800)
nodes/fragment/47/node = SubResource("VisualShaderNodeFloatOp_0ot5f")
nodes/fragment/47/position = Vector2(-400, 1180)
nodes/fragment/48/node = SubResource("VisualShaderNodeVectorDecompose_8ocd3")
nodes/fragment/48/position = Vector2(-640, 1180)
nodes/fragment/51/node = SubResource("VisualShaderNodeVectorDecompose_sa8ns")
nodes/fragment/51/position = Vector2(-640, 1300)
nodes/fragment/52/node = SubResource("VisualShaderNodeFloatOp_h6d27")
nodes/fragment/52/position = Vector2(-400, 1300)
nodes/fragment/53/node = SubResource("VisualShaderNodeFloatOp_14s04")
nodes/fragment/53/position = Vector2(-180, 1180)
nodes/fragment/54/node = SubResource("VisualShaderNodeFloatOp_l4r27")
nodes/fragment/54/position = Vector2(-180, 1300)
nodes/fragment/55/node = SubResource("VisualShaderNodeVectorOp_32uc6")
nodes/fragment/55/position = Vector2(260, 820)
nodes/fragment/56/node = SubResource("VisualShaderNodeVectorOp_ans1g")
nodes/fragment/56/position = Vector2(1220, 680)
nodes/fragment/59/node = SubResource("VisualShaderNodeVectorOp_d42h6")
nodes/fragment/59/position = Vector2(940, 700)
nodes/fragment/64/node = SubResource("VisualShaderNodeVectorOp_j3x57")
nodes/fragment/64/position = Vector2(600, 700)
nodes/fragment/87/node = SubResource("VisualShaderNodeFloatOp_4hvrv")
nodes/fragment/87/position = Vector2(60, 1540)
nodes/fragment/113/node = SubResource("VisualShaderNodeFloatOp_pl0p0")
nodes/fragment/113/position = Vector2(2540, 1580)
nodes/fragment/114/node = SubResource("VisualShaderNodeVectorDecompose_be1ep")
nodes/fragment/114/position = Vector2(-640, 1460)
nodes/fragment/115/node = SubResource("VisualShaderNodeFloatOp_ms4c0")
nodes/fragment/115/position = Vector2(-400, 1460)
nodes/fragment/116/node = SubResource("VisualShaderNodeFloatOp_ogrjb")
nodes/fragment/116/position = Vector2(-180, 1460)
nodes/fragment/118/node = SubResource("VisualShaderNodeVectorOp_u2ce6")
nodes/fragment/118/position = Vector2(3000, 900)
nodes/fragment/120/node = SubResource("VisualShaderNodeFloatOp_ythjp")
nodes/fragment/120/position = Vector2(3560, 1260)
nodes/fragment/123/node = SubResource("VisualShaderNodeClamp_2rh7v")
nodes/fragment/123/position = Vector2(2820, 1580)
nodes/fragment/124/node = SubResource("VisualShaderNodeFloatParameter_kwbs0")
nodes/fragment/124/position = Vector2(-300, 1660)
nodes/fragment/125/node = SubResource("VisualShaderNodeSwitch_wh857")
nodes/fragment/125/position = Vector2(4000, 1120)
nodes/fragment/126/node = SubResource("VisualShaderNodeBooleanParameter_ufu2i")
nodes/fragment/126/position = Vector2(3700, 1000)
nodes/fragment/128/node = SubResource("VisualShaderNodeGlobalExpression_uyjc3")
nodes/fragment/128/position = Vector2(340, 1940)
nodes/fragment/128/size = Vector2(1060, 460)
nodes/fragment/128/input_ports = ""
nodes/fragment/128/output_ports = ""
nodes/fragment/128/expression = "float cornerMask(vec2 controlPos, float cornerRadius, vec2 controlSize)
{
	vec2 shrunkSize = controlSize-vec2(cornerRadius,cornerRadius);
	
	float maskA = distance(controlPos, vec2(cornerRadius,cornerRadius))-(cornerRadius-1.0);
	float maskB = distance(controlPos, vec2(shrunkSize[0],cornerRadius))-(cornerRadius-1.0);
	float maskC = distance(controlPos, vec2(cornerRadius,shrunkSize[1]))-(cornerRadius-1.0);
	float maskD = distance(controlPos, shrunkSize)-(cornerRadius-1.0);
	float cornerOnlyMask = min(min(maskA,maskB),min(maskC,maskD));
	
	float maskE = min(1.0-(controlPos[1]+1.0-controlSize[1]), controlPos[1]) * ((controlPos[0]>cornerRadius && controlPos[0]<shrunkSize[0])?1.0:0.0);
	float maskF = min(1.0-(controlPos[0]+1.0-controlSize[0]), controlPos[0]) * ((controlPos[1]>cornerRadius && controlPos[1]<shrunkSize[1])?1.0:0.0);
	float edgeOnlyMask = min(1.0-maskE, 1.0-maskF);
	
	return min(cornerOnlyMask, edgeOnlyMask);
}"
nodes/fragment/129/node = SubResource("VisualShaderNodeExpression_ypa7l")
nodes/fragment/129/position = Vector2(1280, 1440)
nodes/fragment/129/size = Vector2(640, 240)
nodes/fragment/129/input_ports = "0,3,controlPos;1,3,controlSize;2,0,cornerRadius;"
nodes/fragment/129/output_ports = "0,0,mask;"
nodes/fragment/129/expression = "mask = cornerMask(controlPos,cornerRadius,controlSize);"
nodes/fragment/130/node = SubResource("VisualShaderNodeVec2Parameter_0jhqc")
nodes/fragment/130/position = Vector2(340, 240)
nodes/fragment/131/node = SubResource("VisualShaderNodeClamp_kovvx")
nodes/fragment/131/position = Vector2(640, 440)
nodes/fragment/132/node = SubResource("VisualShaderNodeColorConstant_3j1xf")
nodes/fragment/132/position = Vector2(1940, 1260)
nodes/fragment/135/node = SubResource("VisualShaderNodeVaryingGetter_wrjpy")
nodes/fragment/135/position = Vector2(2580, 820)
nodes/fragment/136/node = SubResource("VisualShaderNodeInput_pwxxm")
nodes/fragment/136/position = Vector2(1444.52, 1045.29)
nodes/fragment/137/node = SubResource("VisualShaderNodeSwitch_vgd3f")
nodes/fragment/137/position = Vector2(40, 1160)
nodes/fragment/138/node = SubResource("VisualShaderNodeBooleanParameter_ecr4f")
nodes/fragment/138/position = Vector2(-280, 1040)
nodes/fragment/139/node = SubResource("VisualShaderNodeParameterRef_uwdm0")
nodes/fragment/139/position = Vector2(-240, 560)
nodes/fragment/140/node = SubResource("VisualShaderNodeParameterRef_2j8qi")
nodes/fragment/140/position = Vector2(760, 1480)
nodes/fragment/141/node = SubResource("VisualShaderNodeParameterRef_gy2x2")
nodes/fragment/141/position = Vector2(120, 700)
nodes/fragment/connections = PackedInt32Array(15, 0, 18, 0, 41, 0, 45, 1, 48, 0, 47, 0, 51, 0, 47, 1, 48, 1, 52, 0, 51, 1, 52, 1, 47, 0, 53, 0, 52, 0, 53, 1, 45, 0, 48, 0, 18, 0, 56, 0, 56, 0, 42, 0, 45, 0, 55, 0, 55, 0, 42, 1, 59, 0, 56, 1, 55, 0, 64, 1, 64, 0, 59, 0, 114, 0, 115, 0, 114, 1, 115, 1, 115, 0, 116, 0, 35, 0, 118, 1, 123, 0, 120, 1, 120, 0, 125, 1, 126, 0, 125, 0, 87, 0, 129, 2, 18, 0, 129, 0, 130, 0, 131, 0, 131, 0, 59, 1, 42, 0, 35, 0, 118, 4, 125, 2, 118, 4, 120, 0, 135, 0, 118, 0, 136, 0, 35, 2, 137, 0, 55, 1, 138, 0, 137, 0, 53, 0, 137, 1, 54, 0, 137, 2, 4, 0, 114, 0, 139, 0, 18, 1, 140, 0, 129, 1, 141, 0, 64, 0, 4, 0, 51, 0, 52, 0, 54, 0, 47, 0, 54, 1, 116, 0, 87, 0, 124, 0, 87, 1, 125, 0, 0, 1, 113, 0, 123, 0, 118, 0, 0, 0, 129, 0, 113, 1)
